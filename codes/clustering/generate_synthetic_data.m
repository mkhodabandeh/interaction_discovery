
function [ data, labels ] = generate_synthetic_data( number_of_distributions, distribution_type, number_of_samples, params1, params2 )
%CREATE_SYNTHETIC_DATA1 Summary of this function goes here
%   This functions produces synthetic data. It can be used for testing
%   clustering or classification methods
%   
%   number_of_distributions: data can be generated by different
%   distributions. e.g. 2
%   For each distribution you can set the number of samples and parameters.
%   For instance you can call:
%       [data, labels] = generate_synthetic_data(2, 'guassian', [100 200], [[1 2] [4 5]], [1
%       1.5]);
%       you will get 100 samples from a guassion dstribution with mu =
%       (1,2) and sigma = 1, and 200 samples from another guassion
%       distribution with mu = (4,5) and sigma = 1.5
%
%   distribution_type: linear, guassion
%       for linear parameters are: a and b (data = ax + b + noise) 
%
%   number_of_samples:
%
%   params1 and params2 can be vectors
    
    if isempty(params1)
        params1 = round(rand(number_of_distirbutinos,2)*100);
    end
    
    if isempty(params2)
        params2 = rand(number_of_distirbutinos,1)*10;
    end
    
    data = zeros(sum(number_of_samples), 2);
    labels = zeros(sum(number_of_samples), 1);
    start = 1;
    if distribution_type == 'guassian'
        for i = 1:number_of_distributions
            c1 = number_of_samples(i);
            labels(start: start+number_of_samples(i)-1) = i;
            data(start: start+number_of_samples(i)-1, :) = normrnd([params1(i,1) *ones(c1,1) params1(i,2)*ones(c1,1)], params2(1)*ones(c1,2));
            start = start + number_of_samples(i);
        end
    elseif distribution_type == 'linear'
        for i = 1:number_of_distributions
            c1 = number_of_samples(i);
            labels(start: start+number_of_samples(i)-1) = i;
            data(start: start+number_of_samples(i)-1, 1) =  normrnd([ones(c1,1)], params2(1)*ones(c1,2));
            data(start: start+number_of_samples(i)-1, 2) = params1(i,1)*data(start, start+number_of_samples(i), 1) + params(i,2) + normrnd([zeros(c1,1)], ones(c1,1));
            start = start + number_of_samples(i);
        end
    end

end

